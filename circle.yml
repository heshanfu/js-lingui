version: 2

test-node-template:
  steps:
    - checkout

    - attach_workspace:
        at: build

    - restore_cache:
        key: node-modules-{{ checksum "yarn.lock" }}

    - run:
        name: Install dependencies
        command: yarn install

    - run:
        name: Install build tools
        command: sudo yarn global add codecov yalc

    - run: node scripts/test.js --skip-build

workflows:
  version: 2
  test_n_deploy:
    jobs:
      - build-docs:
          filters:
            branches:
              only:
                - master
                - stable-2.x

      - build

      - test-linter:
          requires:
            - build
      - test-node8:
          requires:
            - build

      - publish:
          requires:
            - test-linter
            - test-node8
          filters:
            branches:
              only:
                - master
                - stable-2.x
                - new-build

jobs:
  build:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - restore_cache:
          key: node-modules-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: yarn install

      - save_cache:
          key: node-modules-{{ checksum "yarn.lock" }}
          paths:
              - node_modules

      - run: node scripts/build/

      - persist_to_workspace:
          root: build
          paths:
            - packages

  test-node:
    docker:
      - image: circleci/node:8

    steps: <
      - run:
          name: Send coverage report
          command: |
              if [ "${NODEJS}" == "8" ]; then
                codecov
              fi

      - store_test_results:
          path: ./results/
          when: always

  publish:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - attach_workspace:
          at: build

      - restore_cache:
          key: node-modules-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: yarn install

      - run: node scripts/release/update-versions.js --next

      - run: node scripts/release/release-npm.js --next

  test-linter:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - restore_cache:
          key: node-modules-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: yarn install

      - run: yarn run lint

  build-docs:
    docker:
      - image: circleci/python:latest
        environment:
          PYGMENTS_NODE_COMMAND: /usr/local/bin/node

    steps:
      - checkout

      - restore_cache:
          key: pipenv-{{ checksum "Pipfile.lock" }}

      - run: pipenv install

      - save_cache:
          key: pipenv-{{ checksum "Pipfile.lock" }}
          paths:
              - "{{ pipenv --venv }}"

      - run: cd docs; pipenv run make html

      - deploy:
          command: ./scripts/legacy/deploy-docs.sh
